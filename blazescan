#!/bin/bash

###############################setup##################################
#choose y/N
yesno(){ read -p "$question " choice;case "$choice" in y|Y|yes|Yes|YES ) decision=1;; n|N|no|No|NO ) decision=0;; * ) echo "invalid" && yesno; esac; }

#making log location
if [[ -e /usr/local/scan ]];then #then pwd exists
	echo -e 
else
mkdir -p /usr/local/scan
fi

#set sigdir
sigdir=/usr/local/scan/lw-yara

if [[ -e /usr/local/scan/lw-yara/lw.hdb ]]; then #rules installed, run update
	cd $sigdir
	git pull
	echo -e
else git clone https://github.com/Hestat/lw-yara.git $sigdir
	echo -e
fi

scandir=/usr/local/scan

if [[ -x $(which maldet) ]]; then #maldet installed adding maldet sigs
	sigdir2=/usr/local/maldetect/sigs
else
	echo -e #not installed
fi

######################   create formatting #################################
div(){
  for ((i=0;i<$1;i++)); do printf '='; done;
}

header(){
	echo -e "\n$(div 40)\n"
}

header2=$(echo -e "$(div 3)")

title(){
echo -e "                      __________________"
echo -e "                      \                 \ "
echo -e "                       \                 \ "
echo -e "                        \            )    \ "
echo -e "                         \          ).(    \ "
echo -e "       /-------------------------).(.(------"
echo -e "     //---------------//   (     ).(.   //  |"
echo -e "    //                //    (.)   ).(. // __|"
echo -e "   //               //   ) .( .( ).)) //    ||"
echo -e "  //               // ).( .( .) .(.).//     ||"
echo -e " //_______________//  ^^^^^^^^^^^^^^//      ||"
echo -e "------------------------------------/ ------ |"
echo -e "| Blazescan   |         |  Another  |        |"    
echo -e "| AMS Software|         |  Malware  |        |"   
echo -e "|--------------         |  Scanner  |        |"   
echo -e "|                       ------------|        |"
echo -e "----------------------------------------------" 
echo -e "Sometimes you need to burn it down and start fresh"
}

#########################   help menu   #####################################

helpmenu(){
	echo -e "Blazescan is a malware scanning tool that uses clamav and custom malware databases\n"
	echo -e "If you run blazescan without any arguments it will present a simple scanning menu\n"
	echo -e "  -a will scan all cpanel accounts\n"
	echo -e "  -u will scan the specified cpanel user\n"
	echo -e "  -l will show the results of the last scan\n"
	echo -e "  -t will display ctime of the hits in the last scan\n"
	echo -e "  -d scan a directory of your choosing\n"
	echo -e "  -h will display the help menu\n"
	echo -e "By default the scanner will use the rules at https://github.com/Hestat/lw-yara\n"
	echo -e "It will also use the maldet rules if installed http://www.rfxn.com/projects/linux-malware-detect/\n"
}

###########################   scan functions    ################################

cpanelallscan1(){
		for FILE in $(find /var/cpanel/userdata/ -type f | xargs grep documentroot | awk -F":" '{print$1}' | egrep -v "(cache|SSL|nobody)" | xargs grep documentroot | awk -F":" '{print $3}'); do echo -e "Scan location:\t$FILE\n" | tee -a $OP1 
		clamscan -ir -d /usr/local/scan/lw-yara/lw.hdb -d /usr/local/scan/lw-yara/lw-rules_index.yar $FILE | tee -a $OP1; echo -e "\n" | tee -a $OP1 ; done; echo -e "Scan output file can be found here: $OP1"
}


cpanelallscan2(){
		for FILE in $(find /var/cpanel/userdata/ -type f | xargs grep documentroot | awk -F":" '{print$1}' | egrep -v "(cache|SSL|nobody)" | xargs grep documentroot | awk -F":" '{print $3}'); do echo -e "Scan location:\t$FILE\n" | tee -a $OP1 
		clamscan -ir --no-summary -d /usr/local/maldetect/sigs -d /usr/local/scan/lw-yara/lw.hdb -d /usr/local/scan/lw-yara/lw-rules_index.yar $FILE | tee -a $OP1; echo -e "\n" | tee -a $OP1 ; done; echo -e "Scan output file can be found here: $OP1"
}

singlecpanelscan1a(){
                for FILE2 in $(find /var/cpanel/userdata/$user -type f | xargs grep documentroot | awk -F":" '{print$1}' | egrep -v "(cache|SSL|nobody)" | xargs grep documentroot | awk -F":" '{print $2}'); do echo -e "Scan location:\t$FILE2\n" | tee -a $OP2
                clamscan -ir  --no-summary -d  /usr/local/scan/lw-yara/lw.hdb -d  /usr/local/scan/lw-yara/lw-rules_index.yar $FILE2 | tee -a $OP2; echo -e "\n" | tee -a $OP2;done; echo -e "Scan output file can be found here: $OP2"
}

singlecpanelscan2a(){
                for FILE2 in $(find /var/cpanel/userdata/$user -type f | xargs grep documentroot | awk -F":" '{print$1}' | egrep -v "(cache|SSL|nobody)" | xargs grep documentroot | awk -F":" '{print $2}'); do echo -e "Scan location:\t$FILE2\n" | tee -a $OP2
                clamscan -ir  --no-summary -d /usr/local/maldetect/sigs -d  /usr/local/scan/lw-yara/lw.hdb -d  /usr/local/scan/lw-yara/lw-rules_index.yar $FILE2 | tee -a $OP2; echo -e "\n" | tee -a $OP2;done; echo -e "Scan output file can be found here: $OP2"
}

singlecpanelscan1b(){
                for FILE2 in $(find /var/cpanel/userdata/$user -type f | xargs grep documentroot | awk -F":" '{print$1}' | egrep -v "(cache|SSL|nobody)" | xargs grep documentroot | awk -F":" '{print $3}'); do echo -e "Scan location:\t$FILE2\n" | tee -a $OP2
                clamscan -ir  --no-summary -d  /usr/local/scan/lw-yara/lw.hdb -d  /usr/local/scan/lw-yara/lw-rules_index.yar $FILE2 | tee -a $OP2; echo -e "\n" | tee -a $OP2;done; echo -e "Scan output file can be found here: $OP2"
}

singlecpanelscan2b(){
                for FILE2 in $(find /var/cpanel/userdata/$user -type f | xargs grep documentroot | awk -F":" '{print$1}' | egrep -v "(cache|SSL|nobody)" | xargs grep documentroot | awk -F":" '{print $3}'); do echo -e "Scan location:\t$FILE2\n" | tee -a $OP2
                clamscan -ir  --no-summary -d /usr/local/maldetect/sigs -d  /usr/local/scan/lw-yara/lw.hdb -d  /usr/local/scan/lw-yara/lw-rules_index.yar $FILE2 | tee -a $OP2; echo -e "\n" | tee -a $OP2;done; echo -e "Scan output file can be found here: $OP2"
}

directoryscanM(){
 	clamscan -ir  --no-summary -d /usr/local/maldetect/sigs -d  /usr/local/scan/lw-yara/lw.hdb -d  /usr/local/scan/lw-yara/lw-rules_index.yar $direct | tee -a $OP3; echo -e "\n" | tee -a $OP3; echo -e "Scan output file can be found here: $OP3"
}

directoryscan(){
 	clamscan -ir --no-summary -d  /usr/local/scan/lw-yara/lw.hdb -d  /usr/local/scan/lw-yara/lw-rules_index.yar $direct | tee -a $OP3; echo -e "\n" | tee -a $OP3 echo -e "Scan output file can be found here: $OP3"
}

wpclicheck(){
	#wpuser=$(find $wpdirect -name wp-config.php | xargs stat -t --format=%U)
	runuser -l  $wpuser -s /bin/bash -c "wp checksum core --path=$wpdirect"
	echo -e "\n"
}
#############################  time stamps and other things ###################

list(){
	grep UNOFFICIAL $(find /usr/local/scan/ -maxdepth 1 -name '*.txt' -type f -exec stat -c "%y %n" {} + | sort -r | head -n1 |awk '{print$4}')
}

timestamps(){
	grep UNOFFICIAL $(find /usr/local/scan/ -maxdepth 1 -name '*.txt' -type f -exec stat -c "%y %n" {} + | sort -r | head -n1 |awk '{print$4}') | cut -d : -f1 | xargs stat -t --format=%z,%n
}
############################# flags for running ###############################

while getopts ":ahltu:d:w:" opt; do
  case ${opt} in
    h ) # process option h to display help menu
	    helpmenu
	    exit 0
      ;;
    u ) # process option u for individual cpanel account
	    user=$OPTARG
		OP2=/usr/local/scan/$user-$(date +%F-%H%M.txt)
		echo -e "\n"|tee -a $OP2
		if [[ -x $(which maldet) ]];then 
			echo -e "maldet detected, using maldet and lw-yara signatures"
			if [[ $(find /var/cpanel/userdata/$user -type f | xargs grep documentroot |awk -F":" '{print$1}' | egrep -v "(cache|SSL|nobody)" | xargs grep documentroot | wc -l) -eq "1" ]]; then 
                       			singlecpanelscan2a
                       	else
                       			singlecpanelscan2b
                       	fi; 
                else
                        echo -e "using only lw-yara signatures"
                        if [[ $(find /var/cpanel/userdata/$user -type f | xargs grep documentroot |awk -F":" '{print$1}' | egrep -v "(cache|SSL|nobody)" | xargs grep documentroot | wc -l) -eq "1" ]]; then 
                       			singlecpanelscan1a
                       	else
                       			singlecpanelscan1b
				fi
			fi
			exit 0;;
	a ) # -a option to scan all cpanel accounts
		#creating log file
		OP1=/usr/local/scan/scan-$(date +%F-%H%M.txt)
		echo -e "\n"|tee -a $OP1
		if [[ -x $(which maldet) ]]; then 
			echo -e "maldet detected, using maldet and lw-yara signatures"
			cpanelallscan2
		else
			echo -e "using only lw-yara signatures"
			cpanelallscan1
		fi
		exit 0;;

	l ) list
		exit 0;;
	t ) timestamps
		exit 0;;
	d ) #scan specified directory
		direct=$OPTARG
		#creating log file
		OP3=/usr/local/scan/scan-$(date +%F-%H%M.txt)
		echo -e "\n"|tee -a $OP3
		if [[ -x $(which maldet) ]];then
			echo -e "maldet detected, using maldet and lw-yara signatures"
			directoryscanM
		else
			echo -e "using only lw-yara signatures"
			directoryscan
		fi
		exit 0;;
	
	w ) #perform wordpress based scanning
		wpdirect=$OPTARG
		wpuser=$(find $wpdirect -name wp-config.php | xargs stat -t --format=%U)
		OP3=/usr/local/scan/$wpuser-$(date +%F-%H%M.txt)
		echo -e "\n" | tee -a $OP3
		wpclicheck | tee -a $OP3
		if [[ -x $(which maldet) ]];then
			echo -e "maldet detected, using maldet and lw-yara signatures"
			directoryscanM
		else
			echo -e "using only lw-yara signatures"
			directoryscan
		fi
		exit 0;;


    \? ) echo "Usage: cmd [-h help] [-u cpanel user] [ -a scan all cpanel account] [-l list last scan results] [-t list create time of hits]"
      ;;
  esac
done

#############################   begin main   ##################################

if [[ -x $(which whmapi1) ]]; then #cpanel

	#begin menu for cpanel options
	while true
	do
		clear
		header
		helpmenu
		header
		echo -e "\n"
		#title
		echo -e
		echo -e "Please select scan you would like to run\n"
		echo -e "Select [1] to scan all Cpanel accounts and Docroots\n"
		echo -e "Select [2] to scan individual account\n"
		echo -e "Select [3] to exit\n"
		header
read answer
case "$answer" in

	
	1) if [[ -x $(which clamscan) ]]; then #clamav installed
		#creating log file
		OP1=/usr/local/scan/scan-$(date +%F-%H%M.txt)
		echo -e "\n"|tee -a $OP1
		if [[ -x $(which maldet) ]]; then 
			echo -e "maldet detected, using maldet and lw-yara signatures"
			cpanelallscan2
		else
			echo -e "using only lw-yara signatures"
			cpanelallscan1
		fi
	else echo -e "trying to link to existing clamscan binary"
		ln -s /usr/local/cpanel/3rdparty/bin/clamscan /usr/bin/clamscan 
		ln -s /usr/local/cpanel/3rdparty/bin/freshclam /usr/bin/freshclam
		if [[ -x $(which clamscan) ]]; then 
			echo -e "success, please restart to scan"
			else echo -e "clamav not installed please install"
		fi
	fi;;

	2) 	echo "What is the cpanel user?"
		read user
		#creating log file
		OP2=/usr/local/scan/$user-$(date +%F-%H%M.txt)
		echo -e "\n"|tee -a $OP2
		if [[ -x $(which maldet) ]];then 
			echo -e "maldet detected, using maldet and lw-yara signatures"
			if [[ $(find /var/cpanel/userdata/$user -type f | xargs grep documentroot |awk -F":" '{print$1}' | egrep -v "(cache|SSL|nobody)" | xargs grep documentroot | wc -l) -eq "1" ]]; then 
                       			singlecpanelscan2a
                       	else
                       			singlecpanelscan2b
                       	fi; 
                else
                        echo -e "using only lw-yara signatures"
                        if [[ $(find /var/cpanel/userdata/$user -type f | xargs grep documentroot |awk -F":" '{print$1}' | egrep -v "(cache|SSL|nobody)" | xargs grep documentroot | wc -l) -eq "1" ]]; then 
                       			singlecpanelscan1a
                       	else
                       			singlecpanelscan1b
                       	fi; 
		fi;;			

	3) exit;;
	esac
	echo -e "Press Enter to return to menu"
	read input
done
else
	echo -e "not cpanel, please use the -d flag to set the directory you want to scan\n"
	echo -e "use the -h flag to see the flags that can be used"
fi
